Slip 15
A) Write an Android code to merge given two Array/List
Activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<TableLayout xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:app="http://schemas.android.com/apk/res-auto"
xmlns:tools="http://schemas.android.com/tools"
android:layout_width="match_parent"
android:layout_height="match_parent"
tools:context=".MainActivity">
<TableRow >
<TextView
android:layout_width="match_parent"
android:layout_height="100dp"
android:text="list 1"
android:textAlignment="center" />
<EditText
android:id="@+id/et1"
android:layout_width="375dp"
android:layout_height="match_parent"
android:textAlignment="center" />
</TableRow>
<TableRow >
<TextView
android:layout_width="100dp"
android:layout_height="50dp"
android:text="list 2"
android:textAlignment="center" />
<EditText
android:id="@+id/et3"
android:layout_width="match_parent"
android:layout_height="100dp"
android:textAlignment="center" />
</TableRow>
<TableRow >
<TextView
android:layout_width="100dp"
android:layout_height="50dp"
android:text="list 3"
android:textAlignment="center" />
<EditText
android:id="@+id/et2"
android:layout_width="match_parent"
android:layout_height="100dp"
android:textAlignment="center" />
</TableRow>
<Button
android:id="@+id/btn"
android:layout_height="50dp"
android:layout_width="20dp"
android:hint="merge"/>
</TableLayout>
MainActivity.java
package com.example.merge_list;
import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RadioGroup;
import android.widget.Toast;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
public class MainActivity extends AppCompatActivity {
EditText et1, et2,et3;
Button btn;
@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);
btn = (Button) findViewById(R.id.btn);
btn.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View view) {
et1 = (EditText) findViewById(R.id.et1);
et2 = (EditText) findViewById(R.id.et2);
et3 = (EditText) findViewById(R.id.et3);
String ss1 = et1.getText().toString();
String ss2 = et2.getText().toString();
String ss3 = et3.getText().toString();
List<String> l1 = new ArrayList<String>(Collections.singleton(ss1));
List<String> l2 = new ArrayList<String>(Collections.singleton(ss2));
List<String> l3 = new ArrayList<String>(Collections.singleton(ss3));
List<String> l = new ArrayList<String>();
l1.addAll(l2);
l1.addAll(l3);
Toast.makeText(MainActivity.this, "merge=" + l1.toString(),
Toast.LENGTH_SHORT).show();
}
});
}
}



B) Write an Android Application to send Email.
Activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:app="http://schemas.android.com/apk/res-auto"
xmlns:tools="http://schemas.android.com/tools"
android:layout_width="match_parent"
android:layout_height="match_parent"
android:orientation="vertical"
tools:context=".MainActivity">
<EditText
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:id="@+id/to"
android:hint="to"/>
<EditText
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:id="@+id/sub"
android:hint="sub"/>
<EditText
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:id="@+id/msg"
android:hint="msg"/>
<Button
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:id="@+id/send"
android:text="Send"/>
</LinearLayout>
MainActivity.java
package com.example.myemail;
import androidx.appcompat.app.AppCompatActivity;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
public class MainActivity extends AppCompatActivity {
EditText etto,etmessage,etsubject;
Button btsend;
@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);
etto=findViewById(R.id.to);
etmessage=findViewById(R.id.msg);
etsubject=findViewById(R.id.sub);
btsend=findViewById(R.id.send);
btsend.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View v) {
Intent intent =new Intent(Intent.ACTION_VIEW,
Uri.parse("mailto:"+ etto.getText().toString()));
intent.putExtra(Intent.EXTRA_SUBJECT,etsubject.getText().toString());
intent.putExtra(Intent.EXTRA_TEXT,etmessage.getText().toString());
startActivity(intent);
}
});
}
}

A) Write a C program to Identify the type (Directory, character device, Block device, Regular file, FIFO or pipe, symbolic link or socket) of given file using stat() system call.
#include <stdio.h>
#include <sys/types.h>
#include <sys/stat.h>
int main(int argc, char* argv[]) {
    if (argc != 2) {
        printf("Usage: %s <filename>\n", argv[0]);
        return 1;
    }
    struct stat file_info;
    if (stat(argv[1], &file_info) != 0) {
        printf("Failed to get file information!\n");
        return 1;
    }
    if (S_ISDIR(file_info.st_mode)) {
        printf("%s is a directory.\n", argv[1]);
    } else if (S_ISCHR(file_info.st_mode)) {
        printf("%s is a character device.\n", argv[1]);
    } else if (S_ISBLK(file_info.st_mode)) {
        printf("%s is a block device.\n", argv[1]);
    } else if (S_ISREG(file_info.st_mode)) {
        printf("%s is a regular file.\n", argv[1]);
    } else if (S_ISFIFO(file_info.st_mode)) {
        printf("%s is a FIFO or pipe.\n", argv[1]);
    } else if (S_ISLNK(file_info.st_mode)) {
        printf("%s is a symbolic link.\n", argv[1]);
    } else if (S_ISSOCK(file_info.st_mode)) {
        printf("%s is a socket.\n", argv[1]);
    }
    return 0;
}
B) Write a C program which creates a child process and child process catches a signal SIGHUP, SIGINT and SIGQUIT. The Parent process send a SIGHUP or SIGINT signal after every 3 seconds, at the end of 15 second parent send SIGQUIT signal to child and child terminates by displaying message "My Papa has Killed me!!!‚Äù.
#include <stdio.h>
#include <unistd.h>
#include <signal.h>
#include <stdlib.h>
void signal_handler(int sig) {
    switch(sig) {
        case SIGHUP:
            printf("Child process received SIGHUP\n");
            break;
        case SIGINT:
            printf("Child process received SIGINT\n");
            break;
        case SIGQUIT:
            printf("Child process received SIGQUIT\n");
            printf("My Papa has killed me!!!\n");
            exit(0);
            break;
    }
}
int main() {
    pid_t pid;
    int status;
    pid = fork();
    if (pid == -1) {
        printf("Failed to create child process.\n");
        exit(1);
    } else if (pid == 0) {
        /* Child process */
        signal(SIGHUP, signal_handler);
        signal(SIGINT, signal_handler);
        signal(SIGQUIT, signal_handler);
        while (1) {
            /* Do nothing, wait for signals */
        }
    } else {
        /* Parent process */
        int i;
        for (i = 0; i < 5; i++) {
            sleep(3);
            if (i == 3) {
                printf("Sending SIGQUIT to child process\n");
                kill(pid, SIGQUIT);
                break;
            } else {
                printf("Sending SIGHUP to child process\n");
                kill(pid, SIGHUP);
                sleep(1);
                printf("Sending SIGINT to child process\n");
                kill(pid, SIGINT);
                sleep(1);
            }
        }
    }
    return 0;
}
